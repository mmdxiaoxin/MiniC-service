/* Generated By:JavaCC: Do not edit this line. MiniCParserTreeConstants.java Version 5.0 */
package com.mmdxiaoxin.minicservice.parser;

public interface MiniCParserTreeConstants
{
  public int JJTSTART = 0;
  public int JJTPROGRAM = 1;
  public int JJTFUNCTIONSATEMENT = 2;
  public int JJTTYPESPECIFIER = 3;
  public int JJTSTATEMENTBLOCK = 4;
  public int JJTSTATEMENT = 5;
  public int JJTSEQUENCESTATEMENT = 6;
  public int JJTRETURNSTATEMENT = 7;
  public int JJTDECLARATIONSTATEMENT = 8;
  public int JJTASSIGNMENTSTATEMENT = 9;
  public int JJTASSIGNMENTSENTENCE2 = 10;
  public int JJTOREXPRESSION = 11;
  public int JJTANDEXPRESSION = 12;
  public int JJTNOTEXPRESSION = 13;
  public int JJTRELATIONEXPRESSION = 14;
  public int JJTCONDITIONSTATEMENT = 15;
  public int JJTWHILESTATEMENT = 16;
  public int JJTROP = 17;
  public int JJTEXPRESSION = 18;
  public int JJTADDITIVEEXPRESSION = 19;
  public int JJTMULTIPLICATIVEEXPRESSION = 20;
  public int JJTUNARYEXPRESSION = 21;
  public int JJTPARSEIDENTIFIER = 22;
  public int JJTPARSEINTEGER = 23;
  public int JJTSWITCHCSTATEMENT = 24;
  public int JJTCASESTATEMENTBLOCK = 25;
  public int JJTDOWHILESTATEMENT = 26;
  public int JJTFORSTATEMENT = 27;
  public int JJTSELFINCREASING = 28;


  public String[] jjtNodeName = {
    "Start",
    "Program",
    "FunctionSatement",
    "TypeSpecifier",
    "StatementBlock",
    "Statement",
    "SequenceStatement",
    "ReturnStatement",
    "DeclarationStatement",
    "AssignmentStatement",
    "AssignmentSentence2",
    "ORExpression",
    "ANDExpression",
    "NOTExpression",
    "RelationExpression",
    "ConditionStatement",
    "WhileStatement",
    "Rop",
    "Expression",
    "AdditiveExpression",
    "MultiplicativeExpression",
    "UnaryExpression",
    "parseIdentifier",
    "parseInteger",
    "SwitchCStatement",
    "CaseStatementBlock",
    "DoWhileStatement",
    "ForStatement",
    "SelfIncreasing",
  };
}
/* JavaCC - OriginalChecksum=5855a65229e995559d99edf63b2f0b4a (do not edit this line) */
